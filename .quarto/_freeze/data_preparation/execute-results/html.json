{
  "hash": "00e3db5ea36f12c0973f41caa9253ed8",
  "result": {
    "engine": "knitr",
    "markdown": "# Data Preparation {#sec-data-preparation}\nThe IsoPairFinder is designed to analyze stable isotope tracing metabolomics data to identify the possible substrate candidates. Such a study design needs: (i) an unlabeled group: mutant vs. wild-type cultures, (ii) a labeled group: mutant vs. wild-type cultures. \n\nFor the input of IsoPairFinder, it needs two feature tables (“peak_table_C12.csv” and “peak_table_C13.csv”) for each group, and a table of sample information (“sample_info.csv”). In addition, the raw MS data files (in mzML or mzXML format) are needed and provided in the folders. The demo data can be downloaded [here](https://github.com/DoddLab/IsoPairFinder_demo_data).\n\nGenerally, it needs several files (@fig-figure2-1):\n\n- **peak_table_C12.csv**: the peak area table of the unlabeled group (WT and HyuA mutants fed with uric acid). \n    - The first 4 columns should be “id”, “mz”, “rt”, “ms1_isotopes”, and other columns are sample names.\n- **peak_table_C13.csv**: the peak area table of the labeled group (WT and HyuA mutants fed with 13C-uric acid). \n    - The first 4 columns should be “id”, “mz”, “rt”, “ms1_isotopes”, and other columns are sample names.\n- **sample_info.csv**: the sample information file in CSV/XLSX format. \n    - The first 4 columns should be “sample_id”, “group”, “tracer_group”, and “type”. \n    - The “sample_id” should be consistent with the sample names in the peak table.\n    - The “group” is the sample group. It only supports 2 groups in the IsoPairFinder version.\n    - The “tracer_group” is the used tracers; it should be “12C” and “13C”.\n    - The “type” is the sample type, e.g., “sample”, “qc”, “blank”. Default: “sample”\n- **raw data (unlabeled & control group)**: the folder contains raw data of the unlabeled WT.\n    - The folder needed to be named as “group_tracer”, e.g., “WT_12C”.\n    - It supports mzML/mzXML data format.\n- **raw data (unlabeled & case group)**: the folder contains raw data of unlabeled mutation (mzML).\n    - The folder needed to be named as “group_tracer”, e.g., “hyuA_12C”.\n    - It supports mzML/mzXML data format.\n-  **raw data (labeled & control group)**: the folder contains raw data of labeled WT (mzML). \n    - The folder needed to be named as “group_tracer”, e.g., “WT_13C”.\n    - It supports mzML/mzXML data format.\n- **raw data (labeled & case group)**: the folder contains raw data of labeled mutation (mzML).\n    - The folder needed to be named as “group_tracer”, e.g., “hyuA_13C”.\n    - It supports mzML/mzXML data format.\n- **ms2**: The folder includes MS/MS files (mzML/mzXML/mgf)\n\n![Input data files and format requirements.](/images/figure2_1.png){.align-center #fig-figure2-1}\n\nAll input data files can be exported by different metabolomics data processing tools, e.g. xcms @smith_xcms_2006, MS-DIAL @tsugawa_lipidome_2020, and MZmine @schmid_integrative_2023. @tbl-table2-1 summarizes the links to demo data, processed data, and tutorials of different tools. \nWe provided step-by-step instructions in the following parts. The raw data files were acquired from the UHPLC-Agilent 6545XT QTOF. The study design could be found in @sec-case-study. \n\n\nTable: Summary of demo data, processed results, and tutorial {#tbl-table2-1}\n\n| Tool      | Demo data | Processed data | Tutorial | section |\n|-----------|-----------|----------------|----------|----------| \n| xcms @smith_xcms_2006     | [Download](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/00_raw_data) | [Download](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/01_input_data_IsoPairFinder/xcms) | [Tutorial](https://www.bioconductor.org/packages/release/bioc/html/xcms.html) | @sec-xcms | \n| MS-DIAL @tsugawa_lipidome_2020  | [Download](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/00_raw_data) | [Download](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/01_input_data_IsoPairFinder/msdial) | [Tutorial](https://systemsomicslab.github.io/mtbinfo.github.io/MS-DIAL/tutorial.html) | @sec-msdial | \n| MZmine @schmid_integrative_2023   | [Download](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/00_raw_data) | [Download](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/01_input_data_IsoPairFinder/mzmine) | [Tutorial](https://mzmine.github.io/mzmine_documentation/index.html) | @sec-mzmine | \n\n\n<br><br>\n\n\n## xcms {#sec-xcms}\n\n### Step 1: MS1 and MS2 data conversion {#sec-xcms-conversion}\nThe raw data for the demo could be downloaded [here](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/00_raw_data). Convert raw MS1 data and MS2 data files to mzML format using ProteoWizard (version 3.0.23010, [Link](https://proteowizard.sourceforge.io/)). Please follow the conversion settings (@fig-figure2-2).\n\n![ProteoWizard conversion settings.](/images/figure2_2.png){width=75% .align-center #fig-figure2-2}\n\n### Step 2. Peak picking using XCMS and isotope merging\nThe R package `xcms` (version 3.20.0) @smith_xcms_2006 for peak detection and alignment, and the R package `CAMERA` (version 1.54.0) @kuhl_camera_2012 were used for isotope annotation. **Note: The unlabeled group data and the labeled group data were processed separately.**\n\n- **Unlabeled group data processing**. The mzML files are placed in two folders named “WT” and “hyuA_12C” according to their groups. These data were further processed with the following script.\n- **Labeled group data processing**. The mzML files are placed in two folders named “WT” and “hyuA_12C” according to their groups. These data were further processed with the following script.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(xcms)\nlibrary(CAMERA)\n```\n:::\n\n\n### Step 3. Feature table modification\nThe xcms exported feature table could be quickly modified using the IsoPairFinder functions `modify_xcms_table()`. The sample_info table (@fig-figure2-1) is needed to define the samples and groups. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(xcms)\nlibrary(CAMERA)\n```\n:::\n\n\n### Step 4. Organizing files \nPlease move the modified feature tables, the sample information table, the MS2 data files, and the raw data files to the designated location (@fig-figure2-1).\n\n<br><br>\n\n## MS-DIAL {#sec-msdial}\n### Step 1: MS1 and MS2 data conversion\nThe raw data for the demo could be downloaded [here](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/00_raw_data). Convert raw MS1 data to ABF format using `Analysis Base File Converter` (version 1.3.8802, @fig-figure2-3). \n\n![ABF conversion settings.](/images/figure2_3.png){width=75% .align-center #fig-figure2-3}\n\nConvert MS2 data files to mzML format using ProteoWizard (version 3.0.23010, [Link](https://proteowizard.sourceforge.io/)). The parameters could be found in @fig-figure2-2.\n\n\n### Step 2. Peak picking using MS-DIAL\nThe `MS-DIAL` (ver.4.9.221218) was used here. Select the appropriate parameters according to the experimental design (parameters used in the demo data are shown in @fig-figure2-4). Export the feature table containing “Raw data matrix (Area)”. **Note: The unlabeled group data and the labeled group data were processed separately.**\n\n![MS-DIAL peak picking settings.](/images/figure2_4.png){width=50% .align-center #fig-figure2-4}\n\n### Step 3. Feature table modification\nThe MS-DIAL exported feature table could be quickly modified using the IsoPairFinder functions `modify_msdial_table()`. The sample_info table (@fig-figure2-1) is needed to define the samples and groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(IsoPairFinder)\n```\n:::\n\n\n### Step 4. Organizing files\nPlease move the modified feature tables, the sample information table, the MS2 data files, and the raw data files to the designated location (@fig-figure2-1).\n\n\n<br><br>\n\n## MZmine {#sec-mzmine}\n### Step 1: MS1 and MS2 data conversion\nThe raw data for the demo could be downloaded [here](https://github.com/DoddLab/IsoPairFinder_DemoData_DiffTools/tree/main/00_raw_data). Convert raw MS1 data and MS2 data files to mzML format using ProteoWizard (version 3.0.23010, [Link](https://proteowizard.sourceforge.io/); See @sec-xcms-conversion). \n\n### Step 2. Peak picking using MZmine\nThe `MZmine` (version 4.7.3) was used here. Import and load the default parameters (the “UHPLC-QTOF” was used here).  The modified parameters used in the demo data are shown in @fig-figure2-5. **Note: The unlabeled group data and the labeled group data were processed separately.**\n\n![MZmine peak picking settings.](/images/figure2_5.png){width=75% .align-center #fig-figure2-5}\n\n\nExport the feature table using MZmine:  \n**Feature list methods → Export feature list → Export CSV legacy MZmine2** (see @fig-figure2-6).\n\n![MZmine feature table export settings.](/images/figure2_6.png){width=75% .align-center #fig-figure2-6}\n\n### Step 3. Feature table modification\nThe exported feature table can be quickly modified using the IsoPairFinder function `modify_mzmine_table()`. The sample_info table (@fig-figure2-1) is needed to define the samples and groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(IsoPairFinder)\n```\n:::\n\n\n### Step 4. Organizing files\nPlease move the modified feature tables, the sample information table, the MS2 data files, and the raw data files to the designated location (@fig-figure2-1).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}