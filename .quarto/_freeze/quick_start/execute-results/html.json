{
  "hash": "64f8d2a87f7da89c1ea03052c1ea0779",
  "result": {
    "engine": "knitr",
    "markdown": "# Quick Start {#sec-quick-start}\n\n## Installation\nTo install the **IsoPairFinder** package, you can use the following command in R:\n\n::: {.cell}\n\n```{.r .cell-code}\n# intall public packages\nif (!require(devtools)){\n    install.packages(\"devtools\")\n}\n\nif (!require(BiocManager)){\n    install.packages(\"BiocManager\")\n}\n\n# Required packages\nrequired_pkgs <- c(\"dplyr\",\"tidyr\",\"readr\", \"stringr\", \"tibble\", \"purrr\",\n\"ggplot2\", \"igraph\", \"pbapply\", \"Rdisop\", \"randomForest\", \"pryr\", \"magrittr\", \"rmarkdown\", \"caret\")\nBiocManager::install(required_pkgs)\ndevtools::install_github(\"ZhuMetLab/SpectraTools\")\ndevtools::install_github(\"tidymass/masstools\")\n\n# install.packages(\"IsoPairFinder\")\ndevtools::install_github(\"DoddLab/IsoPairFinder\")\n```\n:::\n\n\n## Demo data\nThe demo data belong to the uric acid catabolism pathway study @liu_widely_2023. Briefly, we cultured wild-type and mutant strains (hyuA mutant in the demo data) of C. sporogenes in the presence of either unlabeled uric acid or its [13C5]-labeled isotopolog (detailed study design can be found @sec-case-study). \n\nThe demo data can be downloaded [here](https://github.com/DoddLab/IsoPairFinder_demo_data). The downloaded data contains below files (@fig-figure1-1). Please refer to @sec-data-preparation for the detailed requirements of the data format for the step-by-step data preparation (xcms - @sec-xcms, msdial - @sec-msdial, mzmine - @sec-mzmine). \n\n![The screenshot of the demo data.](/images/figure1_1.png){.align-center #fig-figure1-1}\n\n## Run script\nThe basic use of IsoPairFinder is simply running the R script as below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run the IsoPairFinder workflow\nlibrary(tidyverse)\nlibrary(IsoPairFinder)\n\n# analysis of HyuA \nfind_intemidates(peak_table_unlabel = 'peak_table_C12.csv',\n                 peak_table_label = 'peak_table_C13.csv',\n                 sample_info = 'sample_info.xlsx',\n                 path = '~/Project/00_Uric_Acid_project/Data/20250606_isopairfind_test/Demo_data_msdial/',\n                 polarity = c('positive', 'negative'),\n                 control_group = c(\"WT\"),\n                 case_group = c('hyuA'),\n                 mz_tol = 10,\n                 rt_tol = 0.05,\n                 p_value_cutoff = 0.05,\n                 p_adjust = TRUE,\n                 fold_change_cutoff = 20,\n                 is_recognize_adducts = TRUE)\n```\n:::\n\n\nPlease refer to @sec-isoPairFinder-parameters for the explains of parameters. \n\n## Output\nAfter running, a new folder “00_tracer_result” will be created. It contains several files, including “tracer_pair_result.xlsx” and several PDF files. In the tab of the XLSX file, we could find the identified ion pair results between the unlabeled and labeled groups (@fig-figure1-2). The detailed explanations of each file can be found in @sec-isoPairFinder-output.\n\n![Overview of results.](/images/figure1_2.png){width=75% .align-center #fig-figure1-2}",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}